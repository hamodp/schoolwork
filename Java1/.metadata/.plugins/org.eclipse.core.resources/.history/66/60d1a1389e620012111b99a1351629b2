
import java.io.PrintWriter;
import java.util.*;

/*********************************************************************
 * Application class for reading the EL155 and parsing into an
 * 'ArrayList' of cast vote records.
 *
 * This class is passed a file as an input 'Scanner' and reads that
 * file into an 'ArrayList', each entry of which is a 'Choice'.
 * Because the precinct name and number come only from the header
 * line, this 'String' is also passed in to the constructor and is
 * parsed. 
 *
 * Rules: parsing the header lines is done in this class.
 *        parsing the actual cast vote lines is done in 'Choice'.
 *
 * Copyright (C) 2012 by Duncan A. Buell.  All rights reserved.
 *
 * @author Duncan A. Buell
 * @version 1.00 2012-12-20
**/
public class ReadTheFile implements IReadTheFile
{

	private ArrayList <Choice> theList;
	private static String pctData;
	private PrintWriter outFile = FileUtils.PrintWriterOpen("zout.txt");
	String inputLine;
	Choice vote;
	private int i =0;
	
	public ReadTheFile(Scanner inFile)
	  {
	    this.theList =new ArrayList<Choice>(10);
	    
		this.readFile(inFile);
	    
	  } // public ReadTheFile(Scanner inFile)
	 
	 
	public String getPctData(String inputLine) {
		if(isHeader(inputLine))
		{
			pctData =inputLine.substring(60, 108);
			return pctData;
		}
		else
		{
			return pctData;
		}
	}

	public boolean isChoice(String inputLine) {
		if(inputLine.startsWith("5"))
		{
			return true;
		}
		else
		{
			return false;
		}
	}

	public boolean isHeader(String inputLine) {
		if(inputLine.startsWith("RUN DATE"))
		{
			return true;
		}
		else
		{
			return false;
		}
	}

/*********************************************************************
 * Method to read the cast vote records into the 'ArrayList'.
 *
 * We read line by line. If it's a header, we pull off the pct info.
 * If not a header but is a cast vote line, we create a new 'Choice'
 * with the pct data and the line and add the 'Choice' to the
 * 'ArrayList'. 
 *
 * @param inFile the Scanner from which to read.
**/
	public void readFile(Scanner inFile) {
		
		Scanner localScanner = null;
		
		
			localScanner = new Scanner(inFile.nextLine());
			while(localScanner.hasNext())
			{
				inputLine = localScanner.nextLine();
				System.out.println(inputLine);
				if(isHeader(inputLine))
				{
					getPctData(inputLine);
						
				}
				else if(isChoice(inputLine))
				{
					vote =new Choice(pctData, inputLine);
					System.out.println(vote);
					this.theList.add(vote);
					System.out.println("after add");
				}
			}	
			
		
	
	}
	
/*********************************************************************
 * Method to <code>toString</code> the class.
 *
 * @return the <code>toString<c/ode> of the list.
**/
	public String toString()
	{
		String line;
		line = theList.get(i).toString();
		i++;
		return line;
	}
	
}