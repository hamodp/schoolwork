import java.util.ArrayList;

/*********************************************************************
 * VoteCounts.
 *
 * This class counts the votes for a certain contest
 *
 * Copyright (C) 2012 by Duncan A. Buell.  All rights reserved.
 *
 * @author Duncan A. Buell
 * @version 1.00 2012-12-30
**/
public class VoteCounts implements IVoteCounts{
  private int totalVotes;
  private String contestName;
  private Choices choices;
  private ArrayList<Integer> choiceIDs;
  
  /******************************************************************
   * constructor
   */
  public VoteCounts(int totalVotes, String contestName)
  {
	  this.totalVotes =totalVotes;
	  this.contestName =contestName;
	  this.choices = new Choices();
  }
  
/*********************************************************************
 * Method to add a 'Choice' to the list of choices made by some voter.
 *
 * If the choice already exists in our list, we increment the count.
 * Otherwise, we add to the list and set the vote count to 1.
 *
 * @param choice the 'Choice' to be added.
**/
  
	public void addToCount(Choice choice)
	{
		Choices.AddChoice(choice);
		
		
	}//public void addToCount(Choice choice)

/**************************************************************************
 * puts the vote data into a string including how many votes did not vite for
 * the contest and the total number of votes
 * 
 * @return output
 */
	public String toString()
	{
		int undervote= totalVotes;
		String output=String.format("%20s","Vote counts for "+ contestName+"\n");
		
		output+= "\t" + undervote  +" Undervote" + "\n";
		output+= "\t" + totalVotes  +" Total votes" + "\n";
		return output;
	}
}
